; Universidad del Valle de Guatemala ; IE2023: Programación de Microcontroladores
; Lab3.asm
; Autor: Diego Duarte 22426
; Proyecto: Laboratorio 3
; Hardware: ATMEGA328P
; Creado: 14/02/2024
; Última modificación: 14/02/2024

.include "M328PDEF.inc"
.CSEG
.DEF VALOR_LEDS = R18
.DEF VALOR_DISPLAY_U = R19
.DEF CONTADOR_TIMER0 = R20
.DEF BANDERA_BOTONES = R21
.DEF VALOR_DISPLAY_D = R22
.DEF ALTERNADOR_DISPLAYS = R23
.ORG 0x0000
	JMP MAIN

.ORG 0X0008
	JMP ISR_PCINT1

.ORG 0X0012
	JMP ISR_TIMER2_OVF

.ORG 0X0020
	JMP ISR_TIMER0_OVF

MAIN:
	LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

SETUP:
	LDI R16, (1 << CLKPCE)
	STS CLKPR, R16

	LDI R16, 0b0000_0001	;Reloj a 8MHz
	STS CLKPR, R16

	LDI R16, 0b0001_1111
	OUT DDRB, R16			;Puertos PB en salida

	LDI R16, 0b1111_1100	;Puertos PD en salida
	OUT DDRD, R16

	LDI R16, 0b0011_0011
	OUT PORTC, R16

	LDI R16, 0b0011_0000
	OUT DDRC, R16

	LDI R16, (1 << PCINT8)|(1 << PCINT9)
	STS PCMSK1, R16

	LDI R16, (1 << PCIE1)
	STS PCICR, R16

	CALL INITIALIZE_TIMER0

	LDI R16, (1 << TOIE0)
	STS TIMSK0, R16

	LDI R16, (1 << TOIE2)
	STS TIMSK2, R16

	//LDI R16, (1 << PCIF1)

	LDI VALOR_LEDS, 0x00
	CLR VALOR_DISPLAY_U
	CLR VALOR_DISPLAY_D

	SEI

LOOP:
	

	RJMP SHOW_LEDS
CONTINUE_DISPLAY:

	RJMP LOOP

SHOW_LEDS:
	MOV R16, VALOR_LEDS
	LSL R16
	ANDI R16, 0b0001_1110

	IN R17, PORTB
	ANDI R17, 0b0000_0001

	ADD R17, R16
	OUT PORTB, R17

	RJMP CONTINUE_DISPLAY

SHOW_DISPLAY_U:
	LDI ZH, HIGH(TABLA << 1)
	LDI ZL, LOW(TABLA << 1)
	ADD ZL, VALOR_DISPLAY_U
	BRCC NOCARRY_U
	INC ZH
NOCARRY_U:
	LPM R16, Z
	IN R17, PORTB
	LSL R16
	BRCS CARRY_SET_U
	ANDI R17, 0b1111_1110
	RJMP CONTINUAR_U
CARRY_SET_U:
	ORI R17, 0b0000_0001
CONTINUAR_U:
	OUT PORTD, R16
	OUT PORTB, R17

	RET

SHOW_DISPLAY_D:
	LDI ZH, HIGH(TABLA << 1)
	LDI ZL, LOW(TABLA << 1)
	ADD ZL, VALOR_DISPLAY_D
	BRCC NOCARRY_D
	INC ZH
NOCARRY_D:	
	LPM R16, Z
	IN R17, PORTB
	LSL R16
	BRCS CARRY_SET_D
	ANDI R17, 0b1111_1110
	RJMP CONTINUAR_D
CARRY_SET_D:
	ORI R17, 0b0000_0001
CONTINUAR_D:
	OUT PORTD, R16
	OUT PORTB, R17

	RET


START_DELAY:
	LDI R17, 255
MULT_DELAY:
	LDI R16, 255
DELAY:
	DEC R16
	BREQ DELAY
	DEC R17
	BREQ MULT_DELAY
	RET

INITIALIZE_TIMER0:
	LDI R16, (1 << CS02)|(1<<CS00)
	OUT TCCR0B, R16

	LDI R16, 178
	OUT TCNT0, R16
	// TIMER0 EN 10 ms
	RET


ISR_PCINT1:
	PUSH R16
	IN R16, SREG
	PUSH R16

	LDI R16, (1 << CS21)|(1 << CS22)|( 1 << CS20)
	STS TCCR2B, R16

	LDI R16, 100
	STS TCNT2, R16

	SBRS BANDERA_BOTONES, 0
	RJMP CONTINUE
	ANDI BANDERA_BOTONES, 0b1111_1110
	IN  R16, PINC
	SBRC R16, PC0
	RJMP CHECK_SUMA
RESTA:
	DEC R18
	RJMP CONTINUE
CHECK_SUMA:
	SBRC R16, PC1
	RJMP CONTINUE
SUMA:
	INC R18
CONTINUE:

	POP R16
	OUT SREG, R16
	POP R16
	RETI

ISR_TIMER0_OVF:
	PUSH R16
	IN R16, SREG
	PUSH R16

	LDI R16, 178
	OUT TCNT0, R16

	INC CONTADOR_TIMER0
	CPI CONTADOR_TIMER0, 100
	BRNE IGNORAR_SUMA
INCREMENTAR_VALOR_DISPLAY_U:
	CLR CONTADOR_TIMER0
	INC VALOR_DISPLAY_U
	CPI VALOR_DISPLAY_U, 10
	BRNE IGNORAR_SUMA
	LDI VALOR_DISPLAY_U, 0x00
	INC VALOR_DISPLAY_D
	CPI VALOR_DISPLAY_D, 10
	BRNE IGNORAR_SUMA
	LDI VALOR_DISPLAY_D, 0x00
IGNORAR_SUMA:

	INC ALTERNADOR_DISPLAYS
	SBRS ALTERNADOR_DISPLAYS, 0
	RJMP UNIDADES
DECENAS:
	SBI PORTC, PC5
	CBI PORTC, PC4
	CALL SHOW_DISPLAY_D
	RJMP CONTINUE_TIMER0
UNIDADES:
	SBI PORTC, PC4
	CBI PORTC, PC5
	CALL SHOW_DISPLAY_U
CONTINUE_TIMER0:

	POP R16
	OUT SREG, R16
	POP R16
	RETI

ISR_TIMER2_OVF:
	PUSH R16
	IN R16, SREG
	PUSH R16

	ORI BANDERA_BOTONES, 0x0000_0001

	POP R16
	OUT SREG, R16
	POP R16
	RETI

TABLA: .DB 0x02, 0x9E, 0x24, 0x0C, 0x98, 0x48, 0x40, 0x1E, 0x00, 0x08, 0x10, 0xC0, 0x62, 0x84, 0x60, 0x70
	